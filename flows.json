[
    {
        "id": "2395f6adbeb5589e",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "04e74bfb6596ce71",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fa784fa1435d5307",
        "type": "ui_group",
        "name": "Roll Chart",
        "tab": "04e74bfb6596ce71",
        "order": 6,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "52b1af9da22ea88d",
        "type": "ui_group",
        "d": true,
        "name": "Table",
        "tab": "04e74bfb6596ce71",
        "order": 5,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f3927f275c56e254",
        "type": "ui_group",
        "name": "Map",
        "tab": "04e74bfb6596ce71",
        "order": 2,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "774ee64a3e4f9afd",
        "type": "ui_group",
        "d": true,
        "name": "Speed",
        "tab": "04e74bfb6596ce71",
        "order": 3,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d4280360375e908f",
        "type": "ui_group",
        "d": true,
        "name": "Vibrate",
        "tab": "04e74bfb6596ce71",
        "order": 4,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c7722013df684059",
        "type": "ui_tab",
        "name": "Reports",
        "icon": "fa-file-text-o",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "031a4b4761184c01",
        "type": "ui_group",
        "name": "Reports",
        "tab": "c7722013df684059",
        "order": 2,
        "disp": false,
        "width": 22,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6293bb60cd5176bd",
        "type": "ui_group",
        "name": "Date",
        "tab": "c7722013df684059",
        "order": 1,
        "disp": false,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9d8916742217f067",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#00af92",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#363e4e",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#00af92",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#00af92",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#00fbd2",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#00af92",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 40,
                "sy": 40,
                "gx": 12,
                "gy": 12,
                "cx": 6,
                "cy": 18,
                "px": 6,
                "py": 6
            }
        }
    },
    {
        "id": "2f7b91658fa4b836",
        "type": "mongodb3",
        "uri": "mongodb+srv://projectmongodb0:123456789zx@nodered-project.r8pijwm.mongodb.net/?retryWrites=true&w=majority&appName=Nodered-project",
        "name": "",
        "options": "",
        "parallelism": -1
    },
    {
        "id": "cba8999ae4809ff1",
        "type": "mongodb3",
        "uri": "mongodb+srv://projectmongodb0:123456789zx@nodered-project.r8pijwm.mongodb.net/?retryWrites=true&w=majority&appName=Nodered-project",
        "name": "",
        "options": "",
        "parallelism": -1
    },
    {
        "id": "a5662fc4e9abb539",
        "type": "ui_group",
        "name": "Detail",
        "tab": "04e74bfb6596ce71",
        "order": 1,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4ab2bea43a8779d2",
        "type": "ui_group",
        "name": "Tilt Left-Right Chart",
        "tab": "04e74bfb6596ce71",
        "order": 7,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "63bab9bc2a9691fc",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "031a4b4761184c01",
        "order": 2,
        "width": 16,
        "height": 1
    },
    {
        "id": "499f2c4369f51d69",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "a5662fc4e9abb539",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "214a9a3fcff5d54b",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "a5662fc4e9abb539",
        "order": 9,
        "width": 11,
        "height": 1
    },
    {
        "id": "1e3b7adbb473a7e0",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "774ee64a3e4f9afd",
        "order": 2,
        "width": 3,
        "height": 1
    },
    {
        "id": "fbfdb48422d437c6",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "774ee64a3e4f9afd",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "84ca97bd670c8db2",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "774ee64a3e4f9afd",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "c71a1dcf88b23eaa",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "d4280360375e908f",
        "order": 2,
        "width": 3,
        "height": 1
    },
    {
        "id": "2dc2b0febaed7324",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "d4280360375e908f",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "862c1b66d05f662f",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "d4280360375e908f",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "9d7ee5ad50c7324e",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "d4280360375e908f",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "1afbaa4e725b9463",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "fa784fa1435d5307",
        "order": 2,
        "width": 3,
        "height": 1
    },
    {
        "id": "2448c52b19f52bc7",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "fa784fa1435d5307",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "cc64dae1314376f1",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "fa784fa1435d5307",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "8502e606adc1fb08",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "fa784fa1435d5307",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "26242723c5562dd2",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "4ab2bea43a8779d2",
        "order": 2,
        "width": 3,
        "height": 1
    },
    {
        "id": "134c27d9bb33ea81",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "4ab2bea43a8779d2",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "85b68584a227f231",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "4ab2bea43a8779d2",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "c316ca0cb77226f9",
        "type": "ui_spacer",
        "z": "2395f6adbeb5589e",
        "name": "spacer",
        "group": "4ab2bea43a8779d2",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "8361122255915ecd",
        "type": "ui_group",
        "name": "Sessions",
        "tab": "c7722013df684059",
        "order": 3,
        "disp": true,
        "width": 22,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4fb4f9fb8478552a",
        "type": "ui_group",
        "name": "Session Details",
        "tab": "c7722013df684059",
        "order": 4,
        "disp": true,
        "width": 22,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8a94a7e0c0e511ca",
        "type": "debug",
        "z": "2395f6adbeb5589e",
        "name": "payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 620,
        "wires": []
    },
    {
        "id": "766f3332cee93ef8",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Func chart",
        "func": "let sensor = msg.payload.Sensor;\n\nlet roll = sensor[\"Roll\"];\nlet tiltLeftRight = sensor[\"TiltLeftRight\"];\n\nreturn [\n    { payload: tiltLeftRight },\n    { payload: roll },\n];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 680,
        "wires": [
            [
                "ba0dfa59323016c3",
                "6cc787639fb4e267"
            ],
            [
                "f44a63ca88953723",
                "10d07cfead75daf4"
            ]
        ]
    },
    {
        "id": "c2fdbefbfc9f93d7",
        "type": "ui_chart",
        "z": "2395f6adbeb5589e",
        "name": "",
        "group": "fa784fa1435d5307",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": true,
        "ymin": "-30",
        "ymax": "30",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1ad1ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "css-chart",
        "x": 1030,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "c2c8b72f44c91f03",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Location",
        "func": "let sensor = msg.payload.Sensor || {};\nlet location = sensor[\"Location\"];   \n\nif (!location) return null;\n\nlet [lat, lon] = location.split(\",\").map(parseFloat);\nlet key = `${lat.toFixed(6)},${lon.toFixed(6)}`;  \n\n\nlet locations = flow.get(\"locations\") || {};\n\nlocations[key] = {\n    name: \"Location\",\n    lat,\n    lon,\n    icon: \"fa-map-marker\",\n    layer: \"Location_points\",\n    popup: `Lat: ${lat.toFixed(6)}, Lon: ${lon.toFixed(6)}`,\n};\n\n\nflow.set(\"locations\", locations);\n\nmsg.payload = Object.values(locations);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 820,
        "wires": [
            [
                "d40efd55af2630a0",
                "cf0cd28328db2831"
            ]
        ]
    },
    {
        "id": "42617033f5e92d2a",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "d4280360375e908f",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Text-Current-Vibrate",
        "label": "<span class=\"label-small\">Vibrate</span>",
        "format": "<span class=\"value\">{{msg.payload.toFixed(2)}}</span>",
        "layout": "col-center",
        "className": "css-detail-text",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#6bd3ff",
        "x": 960,
        "y": 540,
        "wires": []
    },
    {
        "id": "3721c53a7f781a2c",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Func table",
        "func": "let sensor = msg.payload.Sensor || {};\nlet time = msg.payload.timestamp || Date.now();\n\nlet tableData = flow.get(\"saveData\") || [];\n\ntableData.unshift({\n    \"timestamp\": new Date(time).toLocaleString(\"th-TH\", {\n            hour12: false\n        }),\n    \"Yaw(Z)\" : sensor[\"Yaw(Z)\"],\n    \"Location\" : sensor[\"Location\"]\n});\n\nif (tableData.length > 10) tableData.pop();\n\nflow.set(\"saveData\", tableData);\n\n\nreturn [\n    { payload: [] },           \n    { payload: tableData }     \n];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 920,
        "wires": [
            [
                "d387d31dc5a24c56"
            ],
            [
                "e70bfd9508d50177"
            ]
        ]
    },
    {
        "id": "e70bfd9508d50177",
        "type": "ui_table",
        "z": "2395f6adbeb5589e",
        "group": "52b1af9da22ea88d",
        "name": "",
        "order": 1,
        "width": 9,
        "height": 4,
        "columns": [
            {
                "field": "timestamp",
                "title": "Date / Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Yaw(Z)",
                "title": "Tilt",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Location",
                "title": "Location",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 890,
        "y": 940,
        "wires": []
    },
    {
        "id": "d387d31dc5a24c56",
        "type": "ui_table",
        "z": "2395f6adbeb5589e",
        "d": true,
        "group": "52b1af9da22ea88d",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 890,
        "y": 900,
        "wires": []
    },
    {
        "id": "2a0beba6d09f1b84",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Func chart Vibrate",
        "func": "msg.payload = Math.random() * 50\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 500,
        "wires": [
            [
                "42617033f5e92d2a",
                "f33a16394158808a"
            ]
        ]
    },
    {
        "id": "4e247153add37b1e",
        "type": "ui_chart",
        "z": "2395f6adbeb5589e",
        "name": "Chart-Vibrate",
        "group": "d4280360375e908f",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "css-chart-vibrate",
        "x": 1090,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "741acc4dd15d9a81",
        "type": "ui_template",
        "z": "2395f6adbeb5589e",
        "group": "fa784fa1435d5307",
        "name": "CSS GOBAL",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n@import url('https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Mozilla+Headline:wght@200..700&family=Noto+Sans+Thai+Looped:wght@100..900&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap');\n\nbody, .nr-dashboard-theme{\n  font-family: 'Jost', sans-serif !important;\n}\n\n    /*Main background*/\n    /* body {\n            background: -webkit-linear-gradient(\n            55deg,\n            #2e3b5e 0%,\n            #296a81 50%,\n            #2b8a90 100%\n        );\n    } */\n\n    /*Top bar*/\n    body.nr-dashboard-theme md-toolbar{\n        background-color: #FFFFFF !important;\n        margin: 0px\n        color: #092621 !important;\n    }\n\n    body.nr-dashboard-theme md-content md-card {\n        /* background-color: transparent !important; */\n        color: #092621 !important;\n    }\n    \n    body.nr-dashboard-theme md-toolbar .md-toolbar-tools {\n        color: #00af92;\n        font-weight: bold;\n    }\n\n    /*Groups*/\n    ui-card-panel {\n        background-color: #FFFFFF !important;\n        border-radius: 10px !important;\n        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);\n        /* margin: 10px !important; */\n    }\n\n    .nr-dashboard-theme ui-card-panel {\n        border-radius: 10px !important;\n    }\n\n    /* ปุ่ม */\n    /* .nr-dashboard-theme .nr-dashboard-button .md-button {\n        background-color: #00af92 !important;\n    }\n    \n    .md-button {\n        border-radius: 10px !important;\n    } */\n\n    .nr-dashboard-cardcontainer {\n        margin: 6px !important;\n    }\n\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: #00af92 !important;\n    }\n\n    /* ชื่อ group */\n    .nr-dashboard-cardtitle {\n        font-size: 15px !important;\n        text-transform: uppercase;\n        margin: 0 !important;\n        padding: 15px 10px 0px 20px  !important;     \n    }\n\n    p.nr-dashboard-chart-title {\n        display: none !important;\n    }\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 90,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "3e6de543868748a0",
        "type": "ui_template",
        "z": "2395f6adbeb5589e",
        "group": "52b1af9da22ea88d",
        "name": "css-table",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* หัวตาราง */\n    .tabulator .tabulator-col {\n        background-color: #FFFFFF !important;\n        border-right: none !important;\n        height: 40px !important;\n        font-size: 16px !important;\n        padding: 10px 10px 10px 5px;\n        border-bottom: none !important;\n    }\n  \n      .tabulator .tabulator-cell {\n        font-size: 15px !important;\n        padding: 10px;\n        border-right: none !important;  /* เส้นแนวตั้ง */\n    }\n\n    /* ข้อมูลในตาราง */\n    .tabulator .tabulator-row {\n        height: 40px !important;\n        border-bottom: 1px solid #ccc !important;\n        text-align: left !important;\n    }\n\n    /* ลูกษร */\n    .tabulator-arrow {\n    display: none !important;\n}\n    \n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 80,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c1c7c7aa8264eb20",
        "type": "ui_template",
        "z": "2395f6adbeb5589e",
        "group": "031a4b4761184c01",
        "name": "css-tableReports",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* หัวตาราง */\n    .tabulator .tabulator-col {\n        background-color: #FFFFFF !important;\n        border-right: none !important;\n        height: 40px !important;\n        font-size: 16px !important;\n        padding: 10px 10px 10px 5px;\n        border-bottom: none !important;\n    }\n  \n      .tabulator .tabulator-cell {\n        font-size: 15px !important;\n        padding: 10px;\n        border-right: none !important;  /* เส้นแนวตั้ง */\n    }\n\n    /* ข้อมูลในตาราง */\n    .tabulator .tabulator-row {\n        height: 40px !important;\n        border-bottom: 1px solid #ccc !important;\n        text-align: left !important;\n    }\n\n    /* ลูกษร\n    .tabulator-arrow {\n    display: none !important;\n} */\n    \n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 250,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "03da970188578956",
        "type": "ui_template",
        "z": "2395f6adbeb5589e",
        "group": "031a4b4761184c01",
        "name": "refresh-box",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<style>\n.refresh-box button.md-button {\n\n    background-color: #00af92 !important; \n    margin-top: 5px;\n}\n\n.refresh-box button.md-button .fa{\n  font-size: 15px;\n  color: white !important;\n}\n\n.refresh-box button.md-button:hover {\n  filter:brightness(1.2); \n  transform: scale(1.02); \n}\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 250,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "51e61dabb5a56bfa",
        "type": "ui_template",
        "z": "2395f6adbeb5589e",
        "group": "031a4b4761184c01",
        "name": "download-box",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<style>\n  #downloadCsv {\n    font-family: 'Jost' !important;\n    border-radius: 2px !important;\n    height: 65px !important;\n    border: none;\n    color: white !important;\n    background-color: #00af92 !important;\n    box-shadow: 0px 2px 3px rgba(1, 0, 0, 0.2) ;\n    transition: box-shadow 0.3s ease;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 3px;\n  }\n\n  #downloadCsv .fa {\n    font-size: 15px;\n    color: white !important;\n  }\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "41912d2603e6b1d9",
        "type": "ui_gauge",
        "z": "2395f6adbeb5589e",
        "name": "",
        "group": "774ee64a3e4f9afd",
        "order": 1,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#157864",
            "#f3863d",
            "#c14d4f"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "8a55c164cea5cfcc",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Func speed",
        "func": "let currentValue = flow.get(\"sliderValue\") || 0;\n\n// ตรวจสอบว่า msg.topic มาจากปุ่มไหน\nif (msg.topic === \"plus\") {\n    currentValue += 1;\n} else if (msg.topic === \"minus\") {\n    currentValue -= 1;\n}\n\n// จำกัดค่าไว้ระหว่าง 0 - 10\nif (currentValue > 10) currentValue = 10;\nif (currentValue < 0) currentValue = 0;\n\nflow.set(\"sliderValue\", currentValue);\n\n// ส่งค่าออกไปยัง Slider\nreturn { payload: currentValue };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 440,
        "wires": [
            [
                "1b57291f351725e7",
                "41912d2603e6b1d9"
            ]
        ]
    },
    {
        "id": "933452d610af9d99",
        "type": "ui_switch",
        "z": "2395f6adbeb5589e",
        "name": "",
        "label": "Save data to database",
        "tooltip": "",
        "group": "a5662fc4e9abb539",
        "order": 10,
        "width": 11,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 160,
        "y": 1140,
        "wires": [
            [
                "ecfefe40cfd2c208"
            ]
        ]
    },
    {
        "id": "ecfefe40cfd2c208",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Func Switch",
        "func": "flow.set(\"saveToDB\", msg.payload);\nif (msg.payload === true) {\n  return {};          \n}\nreturn { reset: true }; \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 1200,
        "wires": [
            [
                "63ac52e6813141f7"
            ]
        ]
    },
    {
        "id": "065935efd975e05e",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "774ee64a3e4f9afd",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Text-Current Speed ",
        "label": "<span class=\"label-small\">Current Speed</span>",
        "format": "<span class=\"value\">{{msg.payload.toFixed(2)}} Kmph</span>",
        "layout": "col-center",
        "className": "css-detail-text",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "1b57291f351725e7",
        "type": "ui_numeric",
        "z": "2395f6adbeb5589e",
        "name": "",
        "label": "Car Speed ​Control",
        "tooltip": "",
        "group": "774ee64a3e4f9afd",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 950,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "caaf8b8dd7afb276",
        "type": "ui_template",
        "z": "2395f6adbeb5589e",
        "group": "a5662fc4e9abb539",
        "name": "css-detailt-text",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n    .css-detail-text {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start !important; \n        justify-content: flex-start !important;\n        text-align: left !important;\n    }\n\n    .css-detailBuzzer-text {\n        display: flex;\n        flex-direction: column;\n        align-items: center !important; \n        justify-content: center !important;\n        text-align: center !important;\n    }\n\n    .css-detail-text .label-small {\n        font-size: 14px !important;\n        text-transform: uppercase;\n        color: #092621;\n        margin-bottom: 4px;\n        opacity: 0.7;\n    }\n\n    .css-detail-text .value {\n        font-size: 15px !important;\n        font-weight: bold;\n        color: #092621;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 100,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a9ca1420f55fe390",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Func chart",
        "func": "msg.payload = Math.random() * 20\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 340,
        "wires": [
            [
                "065935efd975e05e"
            ]
        ]
    },
    {
        "id": "f33a16394158808a",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "ui_control ",
        "func": "msg.ui_control = {\n  options: {\n    legend: { display: false },\n    elements: { point: { radius: 3, hitRadius: 3, hoverRadius: 5 }  },\n\n    scales: {\n      xAxes: [{\n        type: 'time',\n        time: { displayFormats: { second: 'HH:mm:ss' }, tooltipFormat: 'HH:mm:ss' },\n          ticks: {\n          stepSize: 10,\n          fontSize: 10,\n          fontColor: '#333',\n        },\n        gridLines: { display: true, drawTicks: true }\n      }],\n      yAxes: [{\n        ticks: {\n          stepSize: 10,\n          fontSize: 10,\n          fontColor: '#333',\n        },\n        gridLines: { display: true }\n      }]\n    }\n  }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 500,
        "wires": [
            [
                "4e247153add37b1e"
            ]
        ]
    },
    {
        "id": "10d07cfead75daf4",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "fa784fa1435d5307",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Roll",
        "label": "<span class=\"label-small\">Roll</span>",
        "format": "<span class=\"value\">{{msg.payload.toFixed(2)}} mm</span>",
        "layout": "col-center",
        "className": "css-detail-text",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 700,
        "wires": []
    },
    {
        "id": "ba0dfa59323016c3",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "4ab2bea43a8779d2",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Tilt Left-Right",
        "label": "<span class=\"label-small\">Tilt Left-Right</span>",
        "format": "<span class=\"value\">{{msg.payload.toFixed(2)}} deg\\t</span>",
        "layout": "col-center",
        "className": "css-detail-text",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 600,
        "wires": []
    },
    {
        "id": "f44a63ca88953723",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "ui_control ",
        "func": "msg.ui_control = {\n  options: {\n    legend: { display: false },\n    elements: { point: { radius: 3, hitRadius: 3, hoverRadius: 5 } },\n    scales: {\n      xAxes: [{\n        type: 'time',\n        time: {\n          unit: 'second',\n          tooltipFormat: 'HH:mm:ss',\n          displayFormats: {\n            millisecond: 'HH:mm:ss',\n            second:      'HH:mm:ss',\n            minute:      'HH:mm',\n            hour:        'HH:mm'\n          }\n        },\n        ticks: {\n          autoSkip: true,         \n          maxTicksLimit: 6,      \n          maxRotation: 0,\n          fontSize: 10,\n          fontColor: '#333'\n        },\n        gridLines: { display: true, drawTicks: true }\n      }],\n      yAxes: [{\n        ticks: {\n          min: -20,\n          max: 20,\n          stepSize: 10,\n          fontSize: 10,\n          fontColor: '#333'\n        },\n        gridLines: { display: true }\n      }]\n    }\n  }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 740,
        "wires": [
            [
                "c2fdbefbfc9f93d7"
            ]
        ]
    },
    {
        "id": "d8946ec45b9a9d41",
        "type": "ui_form",
        "z": "2395f6adbeb5589e",
        "name": "",
        "label": "Filter",
        "group": "6293bb60cd5176bd",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Start Date",
                "value": "start_date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "End Date",
                "value": "end_date",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "start_date": "",
            "end_date": ""
        },
        "payload": "",
        "submit": "Load Data",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 870,
        "y": 1260,
        "wires": [
            [
                "5620f7bbd22ca008"
            ]
        ]
    },
    {
        "id": "a083ef7c9408f11c",
        "type": "mongodb3 in",
        "z": "2395f6adbeb5589e",
        "service": "_ext_",
        "configNode": "cba8999ae4809ff1",
        "name": "Mongodb",
        "collection": "Tilt-Data",
        "operation": "find.toArray",
        "x": 860,
        "y": 1200,
        "wires": [
            [
                "68f88548a6877452"
            ]
        ]
    },
    {
        "id": "dab9ab345ca1aa4a",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Data func",
        "func": "msg.payload = {}; \nmsg.collection = \"Tilt-Data\"; \nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1200,
        "wires": [
            [
                "a083ef7c9408f11c"
            ]
        ]
    },
    {
        "id": "68f88548a6877452",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Array func",
        "func": "function parseThaiDateTime(datetimeStr) {\n    if (!datetimeStr) return null;\n    let parts = datetimeStr.split(\" \");\n    let datePart = parts[0];\n    let timePart = parts[1] || \"00:00:00\";\n\n    let [day, month, year] = datePart.split(\"/\").map(Number);\n    if (!day || !month || !year) return null;\n\n    year -= 543;\n    let date = new Date(`${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}T${timePart}`);\n    return isNaN(date) ? null : date;\n}\n\nlet obj = msg.payload;\nlet dataArray = Object.values(obj);\n\ndataArray = dataArray.filter(entry => {\n    let date = parseThaiDateTime(entry.timestamp);\n    return date !== null;\n});\n\ndataArray.sort((a, b) => {\n    let dateA = parseThaiDateTime(a.timestamp);\n    let dateB = parseThaiDateTime(b.timestamp);\n    return dateB.getTime() - dateA.getTime(); \n});\n\nflow.set(\"allData\", dataArray);\n\nmsg.payload = dataArray;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1200,
        "wires": [
            [
                "dca72730feaacec4"
            ]
        ]
    },
    {
        "id": "3e70a53f659c1ce5",
        "type": "ui_table",
        "z": "2395f6adbeb5589e",
        "group": "031a4b4761184c01",
        "name": "Table Reports",
        "order": 1,
        "width": 22,
        "height": 13,
        "columns": [
            {
                "field": "Date",
                "title": "Date",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Roll",
                "title": "Roll",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "TiltLeftRight",
                "title": "TiltLeftRight",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Location",
                "title": "Location",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1420,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5620f7bbd22ca008",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Filter",
        "func": "let startDate = new Date(msg.payload.start_date);\nlet endDate = new Date(msg.payload.end_date);\nendDate.setHours(23, 59, 59, 999);\n\nflow.set(\"last_start_date\", msg.payload.start_date);\nflow.set(\"last_end_date\", msg.payload.end_date);\n\nlet allData = flow.get(\"allData\") || [];\n\nfunction parseThaiDateTime(datetimeStr) {\n    if (!datetimeStr) return null;\n    let parts = datetimeStr.split(\" \");\n    let datePart = parts[0];\n    let timePart = parts[1] || \"00:00:00\";\n\n    let [day, month, year] = datePart.split(\"/\").map(Number);\n    if (!day || !month || !year) return null;\n\n    year -= 543;\n    let date = new Date(`${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}T${timePart}`);\n    return isNaN(date) ? null : date;\n}\n\nlet filtered = allData.filter(entry => {\n    if (!entry.timestamp) return false;\n    let entryDate = parseThaiDateTime(entry.timestamp);\n    if (!entryDate) return false;\n\n    return entryDate >= startDate && entryDate <= endDate;\n});\n\nfiltered.sort((a, b) => {\n    let dateA = parseThaiDateTime(a.timestamp);\n    let dateB = parseThaiDateTime(b.timestamp);\n    if (!dateA || !dateB) return 0;\n    return dateA.getTime() - dateB.getTime(); \n});\n\n\nmsg.payload = filtered;\n\nlet lockDateMsg = {\n    payload: {\n        start_date: flow.get(\"last_start_date\"),\n        end_date: flow.get(\"last_end_date\")\n    }\n};\n\nreturn [msg, lockDateMsg];\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1260,
        "wires": [
            [
                "dca72730feaacec4"
            ],
            [
                "d8946ec45b9a9d41"
            ]
        ]
    },
    {
        "id": "7626d1e79e08bd24",
        "type": "ui_button",
        "z": "2395f6adbeb5589e",
        "name": "refresh",
        "group": "031a4b4761184c01",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "refresh-box",
        "icon": "fa-refresh",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 1260,
        "wires": [
            [
                "dab9ab345ca1aa4a"
            ]
        ]
    },
    {
        "id": "dca72730feaacec4",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "func data filter",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1200,
        "wires": [
            [
                "3e70a53f659c1ce5",
                "f864df037fe70643"
            ]
        ]
    },
    {
        "id": "96bec991166f6a66",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Func Database",
        "func": "let saveToDB = flow.get(\"saveToDB\");\n\nlet sensor = msg.payload.Sensor || {};\nlet time = msg.payload.timestamp || Date.now();\n\nif (saveToDB === true) {\n    let date = `${sensor[\"Day\"]}/${sensor[\"Month\"]}/${sensor[\"Year\"]}`;\n\n    return {\n        payload: {\n            \"timestamp\": new Date(time).toLocaleString(\"th-TH\", { hour12: false }),\n            \"Date\": date,               \n            \"Time\": sensor[\"HourTH\"],\n            \"Roll\": sensor[\"Roll\"],\n            \"TiltLeftRight\": sensor[\"TiltLeftRight\"],\n            \"Location\": sensor[\"Location\"],\n        }\n    };\n} else {\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1000,
        "wires": [
            [
                "05bbbe9c04888db4"
            ]
        ]
    },
    {
        "id": "05bbbe9c04888db4",
        "type": "mongodb3 in",
        "z": "2395f6adbeb5589e",
        "service": "_ext_",
        "configNode": "2f7b91658fa4b836",
        "name": "PUT-Mongodb",
        "collection": "Tilt-Data",
        "operation": "insert",
        "x": 920,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "cceee3556467f723",
        "type": "http request",
        "z": "2395f6adbeb5589e",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "body",
        "url": "https://magellan.ais.co.th/asgardpullmessagesapis/api/listen/thing?Key=7F2C352CFD200D8929D6EAAB96AC3BF9",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer fa3d5e0b-8bec-43b1-bb9d-3b7003e6b7c2"
            }
        ],
        "x": 350,
        "y": 620,
        "wires": [
            [
                "4ec4c0b2faf669c9",
                "a9ca1420f55fe390",
                "8a55c164cea5cfcc",
                "2a0beba6d09f1b84",
                "8a94a7e0c0e511ca",
                "766f3332cee93ef8",
                "c2c8b72f44c91f03",
                "3721c53a7f781a2c",
                "96bec991166f6a66"
            ]
        ]
    },
    {
        "id": "c0b82201e3c321f2",
        "type": "inject",
        "z": "2395f6adbeb5589e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "cceee3556467f723"
            ]
        ]
    },
    {
        "id": "263bc3e0a6836f02",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "a5662fc4e9abb539",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "Date",
        "label": "<span class=\"label-small\">Date</span>",
        "format": "<span class=\"value\">{{msg.payload}}</span>",
        "layout": "col-center",
        "className": "css-detail-text",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 910,
        "y": 200,
        "wires": []
    },
    {
        "id": "2e031f6b401d6727",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "a5662fc4e9abb539",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "Time",
        "label": "<span class=\"label-small\">Time</span>",
        "format": "<span class=\"value\">{{msg.payload}}</span>",
        "layout": "col-center",
        "className": "css-detail-text",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 910,
        "y": 240,
        "wires": []
    },
    {
        "id": "8153b03ce7f8551a",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "a5662fc4e9abb539",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "Total Distance",
        "label": "<span class=\"label-small\">Total Distance</span>",
        "format": "<span class=\"value\">{{msg.payload}} m</span>",
        "layout": "col-center",
        "className": "css-detail-text",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 120,
        "wires": []
    },
    {
        "id": "3fec69fe31818562",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "a5662fc4e9abb539",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "Satellite",
        "label": "<span class=\"label-small\">Satellite</span>",
        "format": "<span class=\"value\">{{msg.payload}}</span>",
        "layout": "col-center",
        "className": "css-detail-text",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 920,
        "y": 160,
        "wires": []
    },
    {
        "id": "4ec4c0b2faf669c9",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Func Detail",
        "func": "let sensor = (msg.payload && msg.payload.Sensor) || {};\n\nlet buzzer        = sensor[\"Buzzer\"];\nlet totalDistance = sensor[\"TotalDistance\"];\nlet satellite     = sensor[\"Satellites\"];\nlet speed         = sensor[\"Speed\"];\n\n\nlet ts = sensor.timestamp ?? msg.payload?.timestamp ?? Date.now();\nif (typeof ts === \"number\" && ts < 10_000_000_000) ts = ts * 1000;\n\nconst tz = \"Asia/Bangkok\";\nconst now = new Date(ts);\n\nconst dateTH = now.toLocaleDateString(\"en-GB\", {\n  timeZone: tz,\n  year: \"numeric\",\n  month: \"numeric\",\n  day: \"numeric\",\n});\n\n\nconst timeTH = now.toLocaleTimeString(\"en-GB\", {\n  timeZone: tz,\n  hour12: false,\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n});\n\n\nreturn [\n  { payload: buzzer },\n  { payload: totalDistance },\n  { payload: satellite },\n  { payload: dateTH },\n  { payload: timeTH },\n  { payload: speed },\n];\n",
        "outputs": 6,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 180,
        "wires": [
            [
                "56a6e369a6c64efb",
                "0e5e12c05fc9eaf5"
            ],
            [
                "8153b03ce7f8551a"
            ],
            [
                "3fec69fe31818562"
            ],
            [
                "263bc3e0a6836f02"
            ],
            [
                "2e031f6b401d6727"
            ],
            [
                "7f015f501de241cc"
            ]
        ]
    },
    {
        "id": "6cc787639fb4e267",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "ui_control ",
        "func": "msg.ui_control = {\n  options: {\n    legend: { display: false },\n    elements: { point: { radius: 3, hitRadius: 3, hoverRadius: 5 } },\n    scales: {\n      xAxes: [{\n        type: 'time',\n        time: {\n          unit: 'second',\n          tooltipFormat: 'HH:mm:ss',\n          displayFormats: {\n            millisecond: 'HH:mm:ss',\n            second:      'HH:mm:ss',\n            minute:      'HH:mm',\n            hour:        'HH:mm'\n          }\n        },\n        ticks: {\n          autoSkip: true,         \n          maxTicksLimit: 6,      \n          maxRotation: 0,\n          fontSize: 10,\n          fontColor: '#333'\n        },\n        gridLines: { display: true, drawTicks: true }\n      }],\n      yAxes: [{\n        ticks: {\n          min: -20,\n          max: 20,\n          stepSize: 10,\n          fontSize: 10,\n          fontColor: '#333'\n        },\n        gridLines: { display: true }\n      }]\n    }\n  }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 640,
        "wires": [
            [
                "8108c2ef199cefad"
            ]
        ]
    },
    {
        "id": "8108c2ef199cefad",
        "type": "ui_chart",
        "z": "2395f6adbeb5589e",
        "name": "",
        "group": "4ab2bea43a8779d2",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": true,
        "ymin": "-30",
        "ymax": "30",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1aff5e",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "css-chart",
        "x": 1030,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "0e5e12c05fc9eaf5",
        "type": "ui_template",
        "z": "2395f6adbeb5589e",
        "group": "a5662fc4e9abb539",
        "name": "icon-buzzer",
        "order": 6,
        "width": 3,
        "height": 2,
        "format": "<div class=\"buzzer-wrap\" layout=\"row\" layout-align=\"center center\">\n  <i class=\"fa\"\n     ng-class=\"(+msg.payload===1) ? 'fa-volume-up on' : 'fa-volume-off off'\"></i>\n</div>\n\n<style>\n    .buzzer-wrap {\n      display: flex;\n      flex-direction: column;\n      align-items: center !important; \n      justify-content: flex-start !important;\n      text-align: center !important;\n  }\n  .buzzer-wrap i.fa {\n    transition: transform .2s ease, color .2s ease;\n  }\n  .buzzer-wrap i.on  { font-size: 40px; color: red;}\n  .buzzer-wrap i.off { font-size: 37px; color: #9e9e9e; }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "56a6e369a6c64efb",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "a5662fc4e9abb539",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Buzzer",
        "label": "<span class=\"label-small\">Buzzer</span>",
        "format": "",
        "layout": "col-center",
        "className": "css-detailBuzzer-text",
        "style": true,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 920,
        "y": 80,
        "wires": []
    },
    {
        "id": "0b3ecef9f1534b84",
        "type": "ui_template",
        "z": "2395f6adbeb5589e",
        "group": "a5662fc4e9abb539",
        "name": "css-detailBuzzer-text",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .css-detailBuzzer-text {\n        display: flex;\n        flex-direction: column;\n        align-items: center !important; \n        justify-content: flex-start !important;\n        text-align: center !important;\n\n    }\n\n    .css-detailBuzzer-text .label-small {\n        font-size: 14px !important;\n        text-transform: uppercase;\n        color: #092621;\n        margin-bottom: 4px;\n        opacity: 0.7;\n    }\n\n    .css-detailBuzzer-text .value {\n        font-size: 15px !important;\n        font-weight: bold;\n        color: #092621;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7f015f501de241cc",
        "type": "ui_text",
        "z": "2395f6adbeb5589e",
        "group": "a5662fc4e9abb539",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "Speed",
        "label": "<span class=\"label-small\">Speed</span>",
        "format": "<span class=\"value\">{{msg.payload.toFixed(2)}} km/h</span>",
        "layout": "col-center",
        "className": "css-detail-text",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 910,
        "y": 280,
        "wires": []
    },
    {
        "id": "d40efd55af2630a0",
        "type": "worldmap-tracks",
        "z": "2395f6adbeb5589e",
        "name": "",
        "depth": "2000",
        "layer": "combined",
        "smooth": true,
        "x": 870,
        "y": 800,
        "wires": [
            [
                "cf0cd28328db2831"
            ]
        ]
    },
    {
        "id": "cf0cd28328db2831",
        "type": "ui_worldmap",
        "z": "2395f6adbeb5589e",
        "group": "f3927f275c56e254",
        "order": 1,
        "width": 11,
        "height": 5,
        "name": "",
        "lat": "",
        "lon": "",
        "zoom": "",
        "layer": "OSMC",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "true",
        "path": "/worldmap",
        "overlist": "",
        "maplist": "OSMC,EsriS",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 880,
        "y": 840,
        "wires": []
    },
    {
        "id": "f864df037fe70643",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Convert to Excel",
        "func": "const headers = [\"Date\",\"Time\",\"Roll\",\"TiltLeftRight\",\"Location\"];\n\nlet data = msg.payload;\nif(!Array.isArray(data)){\n  msg.rows = [];\n  msg.headers = headers;\n  return msg;\n}\nmsg.rows = data.map(r => {\n  const o = {};\n  headers.forEach(h => o[h] = (r && r[h] !== undefined && r[h] !== null) ? r[h] : \"\");\n  return o;\n});\nmsg.headers = headers;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 1260,
        "wires": [
            [
                "1def7324d4e17105"
            ]
        ]
    },
    {
        "id": "1def7324d4e17105",
        "type": "ui_template",
        "z": "2395f6adbeb5589e",
        "group": "031a4b4761184c01",
        "name": "Download Button",
        "order": 4,
        "width": 5,
        "height": 1,
        "format": "<button id=\"downloadXlsx\">\n  <i class=\"fa fa-download\" style=\"margin-right:10px;\"></i>\n  DOWNLOAD\n</button>\n\n<script src=\"https://cdn.jsdelivr.net/npm/exceljs@4.4.0/dist/exceljs.min.js\"></script>\n\n<script>\n  (function(scope){\n  let lastMsg = null;\n  scope.$watch('msg', function(m){ lastMsg = m; });\n\n  document.getElementById('downloadXlsx').addEventListener('click', async function(){\n    try {\n      if(!lastMsg || !Array.isArray(lastMsg.rows) || lastMsg.rows.length === 0){\n        alert('No Data To Download');\n        return;\n      }\n\n      const rows = lastMsg.rows;\n      const headers = (lastMsg.headers && Array.isArray(lastMsg.headers) && lastMsg.headers.length)\n        ? lastMsg.headers\n        : Object.keys(rows[0]);\n\n      const wb = new ExcelJS.Workbook();\n      const ws = wb.addWorksheet('Tilt-Data');\n\n      // ความกว้าง\n      const columnWidths = {\n        Date: 18,\n        Time: 18,\n        Roll: 12,\n        TiltLeftRight: 18,\n        Location: 25\n      };\n\n      \n      const dataFontByHeader = {\n        Date:          { name: 'TH Sarabun New', size: 16 },\n        Time:          { name: 'TH Sarabun New', size: 16 },\n        Roll:          { name: 'TH Sarabun New', size: 16 },\n        TiltLeftRight: { name: 'TH Sarabun New', size: 16 },\n        Location:      { name: 'TH Sarabun New', size: 16 }\n      };\n\n      // columns + Header \n      ws.columns = headers.map(h => ({\n        header: h,\n        key: h,\n        width: columnWidths[h] || 16\n      }));\n\n      ws.getRow(1).font = { name: 'TH Sarabun New', size: 18, bold: true };\n      ws.getRow(1).alignment = { horizontal: 'center', vertical: 'middle' };\n      ws.getRow(1).height = 20;\n      ws.views = [{ state: 'frozen', ySplit: 1 }];\n\n      rows.forEach(r => ws.addRow(r));\n\n      // รูปแบบตัวเลข\n      const rollIdx = headers.indexOf('Roll') + 1;\n      const tiltIdx = headers.indexOf('TiltLeftRight') + 1;\n      if (rollIdx > 0) ws.getColumn(rollIdx).numFmt = '0.00';\n      if (tiltIdx > 0) ws.getColumn(tiltIdx).numFmt = '0.0';\n\n      headers.forEach((h, i) => {\n        const col = ws.getColumn(i + 1);\n\n        col.eachCell({ includeEmpty: true }, (cell, rowNumber) => {\n          if (rowNumber === 1) return; \n          cell.alignment = {\n            horizontal: (h === 'Date' || h === 'Time') ? 'left' : 'right',\n            vertical: 'middle'\n          };\n\n          cell.font = dataFontByHeader[h] || { name: 'TH Sarabun New', size: 16 };\n        });\n      });\n\n      // ดาวน์โหลดไฟล์\n      const buffer = await wb.xlsx.writeBuffer();\n      const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n\n      const a = document.createElement('a');\n      a.href = URL.createObjectURL(blob);\n      a.download = 'Tilt-data.xlsx';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } catch (err) {\n      console.error(err);\n      alert('An error occurred while creating the Excel file.');\n    }\n  });\n})(scope);\n</script>\n\n<style>\n  #downloadXlsx {\n    font-family: 'Jost' !important;\n    border-radius: 2px !important;\n    height: 65px !important;\n    border: none;\n    color: white !important;\n    background-color: #00af92 !important;\n    box-shadow: 0px 2px 3px rgba(1, 0, 0, 0.2);\n    transition: box-shadow 0.3s ease, transform 0.2s ease, filter 0.2s ease;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 1px;\n  }\n\n  #downloadXlsx .fa {\n    font-size: 15px;\n    color: white !important;\n  }\n\n  #downloadXlsx:hover {\n    filter: brightness(1.2);\n    transform: scale(1.02);\n  }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "download-box",
        "x": 1630,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "63ac52e6813141f7",
        "type": "trigger",
        "z": "2395f6adbeb5589e",
        "name": "Trigger",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "date",
        "duration": "0.1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 320,
        "y": 1200,
        "wires": [
            [
                "2e53ca0ac0b77101"
            ],
            [
                "2e53ca0ac0b77101"
            ]
        ]
    },
    {
        "id": "2e53ca0ac0b77101",
        "type": "function",
        "z": "2395f6adbeb5589e",
        "name": "Fune Rearm",
        "func": "const on = flow.get(\"saveToDB\") === true;\n\nnode.send([msg, null]);\n\nif (on) {\n  return [null, {}];\n}\nreturn [null, null];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1200,
        "wires": [
            [
                "dab9ab345ca1aa4a"
            ],
            [
                "63ac52e6813141f7"
            ]
        ]
    }
]